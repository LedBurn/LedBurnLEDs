import pygame

PIXEL_SIZE = 6
SIZE = [PIXEL_SIZE * 200, PIXEL_SIZE * 100]

SMALL_SHEEP_MAPPING = [(0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0), (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (20, 20), (19, 20), (19, 19), (18, 19), (18, 18), (17, 18), (17, 17), (16, 17), (16, 16), (15, 16), (14, 16), (13, 16), (12, 16), (12, 17), (11, 17), (10, 17), (10, 18), (9, 18), (8, 18), (8, 19), (7, 19), (7, 20), (6, 20), (6, 21), (6, 22), (6, 23), (6, 24), (7, 24), (7, 25), (7, 26), (8, 26), (9, 26), (10, 26), (10, 27), (11, 27), (12, 27), (12, 28), (13, 28), (14, 28), (15, 28), (15, 27), (16, 27), (17, 27), (18, 27), (18, 26), (19, 26), (19, 25), (20, 24), (20, 23), (20, 22), (20, 21), (27, 0), (28, 0), (29, 0), (21, 23), (21, 24), (21, 25), (22, 25), (22, 26), (22, 27), (22, 28), (23, 29), (23, 30), (23, 31), (24, 32), (25, 32), (26, 33), (27, 33), (30, 0), (31, 0), (28, 33), (28, 34), (28, 35), (28, 36), (28, 37), (28, 38), (28, 39), (28, 40), (28, 41), (28, 42), (28, 43), (28, 44), (28, 45), (28, 46), (32, 0), (33, 0), (34, 0), (35, 0), (36, 0), (37, 0), (31, 46), (31, 45), (31, 44), (31, 43), (31, 42), (31, 41), (31, 40), (31, 39), (31, 38), (31, 37), (31, 36), (31, 35), (31, 34), (31, 33), (38, 0), (39, 0), (32, 33), (33, 33), (34, 34), (35, 35), (36, 36), (37, 36), (38, 37), (39, 37), (40, 36), (41, 36), (42, 35), (43, 34), (44, 33), (40, 0), (45, 33), (46, 34), (47, 35), (48, 36), (49, 37), (50, 37), (51, 38), (52, 37), (53, 37), (54, 36), (55, 35), (56, 34), (57, 34), (58, 33), (41, 0), (42, 0), (59, 32), (59, 33), (59, 34), (59, 35), (59, 36), (59, 37), (59, 38), (59, 39), (59, 40), (59, 41), (59, 42), (59, 43), (59, 44), (59, 45), (59, 46), (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (62, 46), (62, 45), (62, 44), (62, 43), (62, 42), (62, 41), (62, 40), (62, 39), (62, 38), (62, 37), (62, 36), (62, 35), (62, 34), (62, 33), (49, 0), (50, 0), (63, 32), (64, 33), (65, 33), (66, 32), (67, 32), (68, 31), (69, 31), (69, 30), (69, 29), (69, 28), (68, 27), (51, 0), (52, 0), (68, 26), (69, 25), (69, 24), (70, 23), (70, 22), (70, 21), (69, 20), (69, 19), (68, 18), (67, 17), (66, 17), (65, 18), (53, 0), (54, 0), (64, 18), (64, 17), (63, 16), (63, 15), (62, 14), (61, 13), (60, 12), (59, 12), (58, 13), (57, 14), (56, 15), (56, 16), (55, 17), (55, 0), (56, 0), (54, 17), (53, 16), (53, 15), (52, 14), (52, 13), (51, 12), (50, 12), (49, 12), (48, 13), (48, 14), (47, 15), (47, 16), (46, 16), (46, 17), (57, 0), (45, 17), (44, 16), (43, 15), (43, 14), (43, 13), (42, 12), (41, 11), (40, 11), (39, 11), (38, 12), (38, 13), (37, 14), (37, 15), (36, 16), (58, 0), (59, 0), (35, 16), (34, 15), (33, 14), (32, 13), (31, 12), (30, 12), (29, 13), (28, 14), (28, 15), (28, 16), (27, 17), (27, 18), (60, 0), (61, 0), (62, 0), (26, 18), (25, 17), (25, 16), (24, 15), (23, 14), (22, 14), (21, 15), (20, 16), (20, 17), (21, 18), (21, 19), (21, 20), (15, 21), (11, 21)]
# SMALL_SHEEP_INTERESTING_Xs = (6, 70)
# SMALL_SHEEP_INTERSETING_Ys = (11, 46)

# SMALL_SHEEP_SIMULATOR_STARTING_POINT = (2, 2)


class SheepSimulator(object):
    """ A specific simulator for the 3 sheeps + sign app.
    """

    def __init__(self):
        """
        """
        self.screen = pygame.display.set_mode(SIZE)

    def draw_LEDs(self,
                  small_sheep0_data,
                  big_sheep12_data,
                  big_sheep34_data,
                  signs):
        """ Draw leds on screen.

        each data is an array in size = 3 * num of leds.
        each 3 values are [r, g, b] of the led in that index.

        This method will draw the leds
        based on their current color and init mapping.
        """

        # small sheep
        for index in range(len(small_sheep0_data) / 3):
            rect = [PIXEL_SIZE * SMALL_SHEEP_MAPPING[index][0], PIXEL_SIZE * SMALL_SHEEP_MAPPING[index][1], PIXEL_SIZE, PIXEL_SIZE]
            pygame.draw.rect(self.screen, small_sheep0_data[index * 3:index * 3 + 3], rect, 0)

        pygame.display.flip()
